<?php // machines.php
class Machines
{
    // set up connections
    private $conn;
    private $table_name = "machines";
    
    // object properties
    public $business_id;
    public $machine_id;
    public $machine_name;
    
    // the constructor does a thing
    public function __construct($db)
    {
        $this->conn         = $db;
    }
    
    // read all machines in a business
    function read()
    {
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        
        $query  = "SELECT Business_ID, Machine_ID, Machine_Name
                    FROM ". $this->table_name ."
                    WHERE Business_ID = '". $this->business_id ."'
                    ORDER BY Machine_Name";
        
        // prepare it
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        return $stmt;
    }
    
    // pull_one
    function pull_one()
    {
        if(isset($machine_id))
        {
            $query  = "SELECT Machine_Name
                        FROM ". $this->table_name ."
                        WHERE Business_ID = '". $this->business_id ."' AND Machine_ID = '". $this->machine_id ."'";
        }
        else
        {
            $query  = "SELECT Machine_Name
                        FROM ". $this->table_name ."
                        WHERE Business_ID = '". $this->business_id ."'";
        }
        // prepare that statement
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        $row    = $stmt->fetch(PDO::FETCH_ASSOC);
        // set the variables
        $this->machine_name = $row['Machine_Name'];
        $this->machine_id   = $row['Machine_ID'];
    }
    
    function create()
    {
        $query  = "INSERT INTO ". $this->table_name ."
                    SET
                        Business_ID     =:business_id,
                        Machine_ID      =:machine_id,
                        Machine_Name    =:machine_name";
        
        $stmt   = $this->conn->prepare($query);
        
        // sanitize it all
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->machine_name     = htmlspecialchars(strip_tags($this->machine_name));
        
        // bind those squeaky clean parameters into the statement
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':machine_name',   $this->machine_name);
        
        // execute the statement
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
    
    // update an existing entry
    function update()
    {
        // the update query
        $query  = "UPDATE ". $this->table_name ."
                    SET
                        Machine_Name    =:machine_name
                    WHERE
                        Business_ID     =:business_id
                            AND
                        Machine_ID      =:machine_id";
        
        // prepare the statement
        $stmt   = $this->conn->prepare($query);
        
        // sanitize
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->machine_name     = htmlspecialchars(strip_tags($this->machine_name));
        
        // bind it
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':machine_name',    $this->machine_name);
        
        // do eet
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
}
?>