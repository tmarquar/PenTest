<?php // shared_devices.php
class Shared_Devices
{
    private $conn;
    private $table_name = "shared_devices";
    
    public $business_id;
    public $machine_id;
    public $name;
    public $description;
    public $path;
    
    public function __construct($db)
    {
        $this->conn         = $db;
    }
    
    function read()
    {
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        
        $query  = "SELECT
                        Business_ID,
                        Machine_ID,
                        Name,
                        Description,
                        Path
                    FROM ". $this->table_name ."
                    WHERE
                        Business_ID = '". $this->business_id ."'
                            AND
                        Machine_ID = '". $this->machine_id ."'
                    ORDER BY Name";
        
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        return $stmt;
    }
    
    function pull_one()
    {
        $query  = "SELECT Name, Description, Path
                    FROM ". $this->table_name ."
                    WHERE
                        Business_ID = '". $this->business_id ."'
                            AND
                        Machine_ID = '". $this->machine_id ."'";
        
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        $row                = $stmt->fetch(PDO::FETCH_ASSOC);
        
        $this->name         = $row['Name'];
        $this->description  = $row['Description'];
        $this->path         = $row['Path'];
    }
    
    function create()
    {
        $query  = "INSERT INTO ". $this->table_name ."
                    SET
                        Business_ID     =:business_id,
                        Machine_ID      =:machine_id,
                        Name            =:name,
                        Description     =:description,
                        Path            =:path";
        $stmt   = $this->conn->prepare($query);
        
        $this->business_id  = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id   = htmlspecialchars(strip_tags($this->machine_id));
        $this->name         = htmlspecialchars(strip_tags($this->name));
        $this->description  = htmlspecialchars(strip_tags($this->description));
        $this->path         = htmlspecialchars(strip_tags($this->path));
        
        // take these clean things and put them into the, uuuhh, you know. Other thing.
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':name',           $this->name);
        $stmt->bindParam(':description',    $this->description);
        $stmt->bindParam(':path',           $this->path);
        
        // wrap up that statement
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
    
    function update()
    {
        $query  = "UPDATE ". $this->table_name ."
                    SET
                        Name        =:name,
                        Description =:description,
                        Path        =:path
                    WHERE
                        Business_ID =:business_id
                            AND
                        Machine_ID  =:machine_id";
        
        $stmt   = $this->conn->prepare($query);
        
        // clean the comments
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->name             = htmlspecialchars(strip_tags($this->name));
        $this->description      = htmlspecialchars(strip_tags($this->description));
        $this->path             = htmlspecialchars(strip_tags($this->path));
        
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':name',           $this->name);
        $stmt->bindParam(':description',    $this->description);
        $stmt->bindParam(':path',           $this->path);
        
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
}
?>