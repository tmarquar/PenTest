<?php // user_information.php
class User_Information
{
    private $conn;
    private $table_name = "user_information";
    
    public $business_id;
    public $machine_id;
    public $name;
    public $account_type;
    public $s_id;
    public $domain;
    public $password_required;
    public $is_admin;
    
    public function __construct($db)
    {
        $this->conn         = $db;
    }
    
    function read()
    {
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        
        $query  = "SELECT
                        Current_User_Name,
                        Account_Type,
                        User_SID,
                        Account_Domain,
                        Password_Required,
                        Is_Admin
                    FROM ". $this->table_name ."
                    WHERE
                        Business_ID = '". $this->business_id ."'
                            AND
                        Machine_ID  = '". $this->machine_id ."'
                    ORDER BY Current_User_Name";
                    
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        return $stmt;
    }
    
    function pull_one()
    {
        $query  = "SELECT
                        Current_User_Name,
                        Account_Type,
                        User_SID,
                        Account_Domain,
                        Password_Required,
                        Is_Admin
                    FROM ". $this->table_name ."
                    WHERE
                        Business_ID = '". $this->business_id ."'
                            AND
                        Machine_ID  = '". $this->machine_id ."'";
                    
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        $row    = $stmt->fetch(PDO::FETCH_ASSOC);
        
        $this->name             = $row['Current_User_Name'];
        $this->account_type     = $row['Account_Type'];
        $this->s_id             = $row['User_SID'];
        $this->domain           = $row['Account_Domain'];
        $this->password_required= $row['Password_Required'];
        $this->is_admin         = $row['Is_Admin'];
    }
    
    function create()
    {
        $query  = "INSERT INTO ". $this->table_name ."
                    SET
                        Business_ID         =:business_id,
                        Machine_ID          =:machine_id,
                        Current_User_Name   =:user,
                        Account_Type        =:type,
                        User_SID            =:sid,
                        Account_Domain      =:domain,
                        Password_Required   =:password,
                        Is_Admin            =:admin";
        $stmt   = $this->conn->prepare($query);
        
        // sanitize the fields
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->name             = htmlspecialchars(strip_tags($this->name));
        $this->account_type     = htmlspecialchars(strip_tags($this->account_type));
        $this->s_id             = htmlspecialchars(strip_tags($this->s_id));
        $this->domain           = htmlspecialchars(strip_tags($this->domain));
        $this->password_required= htmlspecialchars(strip_tags($this->password_required));
        $this->is_admin         = htmlspecialchars(strip_tags($this->is_admin));
        
        $stmt->bindParam(':business_id',        $this->business_id);
        $stmt->bindParam(':machine_id',         $this->machine_id);
        $stmt->bindParam(':user',               $this->name);
        $stmt->bindParam(':type',               $this->account_type);
        $stmt->bindParam(':sid',                $this->s_id);
        $stmt->bindParam(':domain',             $this->domain);
        $stmt->bindParam(':password',           $this->password_required);
        $stmt->bindParam(':admin',              $this->is_admin);
        
        // attempt to put, and respond accordingly
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
    
    function update()
    {
        $query  = "UPDATE ". $this->table_name ."
                    SET
                        Current_User_Name       =:name,
                        Account_Type            =:account_type,
                        User_SID                =:s_id,
                        Account_Domain          =:account_domain,
                        Password_Required       =:password_required,
                        Is_Admin                =:is_admin";
        
        $stmt   = $this->conn->prepare($query);
        
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->name             = htmlspecialchars(strip_tags($this->name));
        $this->account_type     = htmlspecialchars(strip_tags($this->account_type));
        $this->s_id             = htmlspecialchars(strip_tags($this->s_id));
        $this->domain           = htmlspecialchars(strip_tags($this->domain));
        $this->password_required= htmlspecialchars(strip_tags($this->password_required));
        $this->is_admin         = htmlspecialchars(strip_tags($this->is_admin_));
        
        $stmt->bindParam(':business_id',        $this->business_id);
        $stmt->bindParam(':machine_id',         $this->machine_id);
        $stmt->bindParam(':name',               $this->name);
        $stmt->bindParam(':account_type',       $this->account_type);
        $stmt->bindParam(':s_id',               $this->s_id);
        $stmt->bindParam(':account_domain',     $this->account_domain);
        $stmt->bindParam(':password_required',  $this->password_required);
        $stmt->bindParam(':is_admin',           $this->is_admin);
        
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
}
?>