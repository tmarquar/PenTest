<?php // installed_updates.php
class Installed_Updates
{
    // set up the connections
    private $conn;
    private $table_name = "installed_updates";
    
    // object properties
    public $business_id;
    public $machine_id;
    public $description;
    public $hf_id;
    public $installed_on;
    public $installed_by;
    
    // the constructor goes here
    public function __construct($db)
    {
        $this->conn         = $db;
    }
    
    // read all the updates from the database
    function read()
    {
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        
        // select all the programs from a machine
        $query  = "SELECT Description, Hot_Fix_Id, Installed_On, Installed_By
                    FROM ". $this->table_name ."
                    WHERE
                        Business_ID = '". $this->business_id ."'
                            AND
                        Machine_ID = '". $this->machine_id ."'
                    ORDER BY Installed_On";

        // prepare that statement
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        return $stmt;
    }
    
    // pull one update
    // Why? I don't know. Maybe you just want the most recent?
    function pull_one()
    {
        $query  = "SELECT Description, Hot_Fix_Id, Installed_On, Installed_By
                    FROM ". $this->table_name ."
                    WHERE Business_ID = '". $this->business_id ."' AND Machine_ID = '". $this->machine_id ."'
                    ORDER BY Installed_On";
        
        // prepare that statement
        $stmt   = $this->conn->prepare($query);
        
        $stmt->execute();
        
        $row    = $stmt->fetch(PDO::FETCH_ASSOC);
        // set the variables like they should be
        $this->description  = $row['Description'];
        $this->hf_id        = $row['Hot_Fix_Id'];
        $this->installed_on = $row['Installed_On'];
        $this->installed_by = $row['Installed_By'];
    }
    
    function create()
    {
        $query  = "INSERT INTO ". $this->table_name ."
                    SET
                        Business_ID     =:business_id,
                        Machine_ID      =:machine_id,
                        Description     =:description,
                        Hot_Fix_Id      =:hf_id,
                        Installed_On    =:installed_on,
                        Installed_By    =:installed_by";
        
        // prepare that shiz
        $stmt   = $this->conn->prepare($query);
        
        // sanitize
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->description      = htmlspecialchars(strip_tags($this->description));
        $this->hf_id            = htmlspecialchars(strip_tags($this->hf_id));
        $this->installed_on     = htmlspecialchars(strip_tags($this->installed_on));
        $this->installed_by     = htmlspecialchars(strip_tags($this->installed_by));
        
        // bind those clean parameters into the statement
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':description',    $this->description);
        $stmt->bindParam(':hf_id',          $this->hf_id);
        $stmt->bindParam(':installed_on',   $this->installed_on);
        $stmt->bindParam(':installed_by',   $this->installed_by);
        
        // execute the command!
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
    
    // update an existing entry
    function update()
    {
        // the update query
        $query  = "UPDATE ". $this->table_name ."
                    SET
                        Description     =:description,
                        Hot_Fix_Id      =:hf_id,
                        Installed_On    =:installed_on,
                        Installed_By    =:installed_by
                    WHERE
                        Business_ID     =:business_id
                            AND
                        Machine_ID      =:machine_id";
        
        // massage that statement into being
        $stmt   = $this->conn->prepare($query);
        
        // steam & sanitize
        $this->business_id      = htmlspecialchars(strip_tags($this->business_id));
        $this->machine_id       = htmlspecialchars(strip_tags($this->machine_id));
        $this->description      = htmlspecialchars(strip_tags($this->description));
        $this->hfid             = htmlspecialchars(strip_tags($this->hfid));
        $this->installed_on     = htmlspecialchars(strip_tags($this->installed_on));
        $this->installed_by     = htmlspecialchars(strip_tags($this->installed_by));
        
        // put it in there!
        $stmt->bindParam(':business_id',    $this->business_id);
        $stmt->bindParam(':machine_id',     $this->machine_id);
        $stmt->bindParam(':description',    $this->description);
        $stmt->bindParam(':hf_id',          $this->hf_id);
        $stmt->bindParam(':installed_on',   $this->installed_on);
        $stmt->bindParam(':installed_by',   $this->installed_by);
        
        // execute it
        if ($stmt->execute())
        {
            return true;
        }
        return false;
    }
}
?>